{"version":3,"sources":["logo.svg","components/processImage.js","components/FileInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["processImages","files","a","processImagesPromises","Array","from","map","file","fileReaderPromise","readerEvent","loadFileReader","name","Promise","all","fileReader","FileReader","resolve","_reject","onload","console","log","readAsDataURL","imageName","image","Image","redefineImagePromise","redefineImage","src","target","result","pageWidth","pageHeight","imageWidth","width","imageHeight","height","isVertical","imageFillsPage","ratio","originalWidth","originalHeight","toFixed","orientation","resized","FileInput","useState","images","setImages","processedImages","setProcessedImages","className","onSubmit","e","preventDefault","then","table","htmlFor","type","id","accept","onChange","multiple","value","length","Math","random","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4335e7c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const processImages = async (files) => {\r\n  const processImagesPromises = Array.from(files).map(async (file) => {\r\n    const readerEvent = await fileReaderPromise(file);\r\n    return await loadFileReader(readerEvent, file.name);\r\n  });\r\n  return await Promise.all(processImagesPromises);\r\n};\r\n\r\nconst fileReaderPromise = (file) => {\r\n  var fileReader = new FileReader();\r\n  return new Promise((resolve, _reject) => {\r\n    fileReader.onload = (readerEvent) => resolve(readerEvent);\r\n    console.log(\"file\", file);\r\n    fileReader.readAsDataURL(file);\r\n  });\r\n};\r\n\r\nconst loadFileReader = async (readerEvent, imageName) => {\r\n  let image = new Image();\r\n  const redefineImagePromise = new Promise((resolve, _reject) => {\r\n    image.onload = () => resolve(redefineImage(image, imageName));\r\n    image.src = readerEvent.target.result;\r\n  });\r\n  return await redefineImagePromise;\r\n};\r\n\r\nconst redefineImage = (image, imageName) => {\r\n  const pageWidth = 796;\r\n  const pageHeight = 1123;\r\n  let imageWidth = image.width;\r\n  let imageHeight = image.height;\r\n  const isVertical = imageWidth <= imageHeight ? true : false;\r\n  let imageFillsPage = true;\r\n\r\n  let ratio = 0;\r\n  if (isVertical) {\r\n    if (imageWidth > pageWidth) {\r\n      ratio = pageWidth / imageWidth;\r\n      imageWidth = imageWidth * ratio;\r\n      imageHeight = imageHeight * ratio;\r\n      imageFillsPage = false;\r\n    }\r\n    if (imageHeight > pageHeight) {\r\n      ratio = pageHeight / imageHeight;\r\n      imageWidth = imageWidth * ratio;\r\n      imageHeight = imageHeight * ratio;\r\n      imageFillsPage = false;\r\n    }\r\n  } else {\r\n    // Horizontal\r\n    if (imageWidth > pageHeight) {\r\n      ratio = pageHeight / imageWidth;\r\n      imageWidth = imageWidth * ratio;\r\n      imageHeight = imageHeight * ratio;\r\n      imageFillsPage = false;\r\n    }\r\n    if (imageHeight > pageWidth) {\r\n      ratio = pageWidth / imageHeight;\r\n      imageWidth = imageWidth * ratio;\r\n      imageHeight = imageHeight * ratio;\r\n      imageFillsPage = false;\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: imageName,\r\n    originalWidth: image.width,\r\n    originalHeight: image.height,\r\n    width: imageWidth.toFixed(2),\r\n    height: imageHeight.toFixed(2),\r\n    orientation: isVertical ? \"VERTICAL\" : \"HORIZONTAL\",\r\n    resized: !imageFillsPage,\r\n  };\r\n};\r\n\r\nexport default processImages;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport processImages from \"./processImage\";\r\n\r\nconst FileInput = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [processedImages, setProcessedImages] = useState([]);\r\n\r\n  const handleInputs = (e) => {\r\n    setImages(e.target.files);\r\n  };\r\n\r\n  const processImagesEvent = (e) => {\r\n    e.preventDefault();\r\n    processImages(images).then((images) => {\r\n      console.table(images);\r\n      setProcessedImages(images);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"input\">\r\n          <form className=\"fileForm\" onSubmit={processImagesEvent}>\r\n            <div className=\"form_control\">\r\n              <label htmlFor=\"fileInput\"></label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"\"\r\n                id=\"fileInput\"\r\n                accept=\"image/jpeg\"\r\n                onChange={handleInputs}\r\n                multiple\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value=\"Send\" />\r\n          </form>\r\n        </div>\r\n        <div className=\"results\">\r\n          { \r\n          (processedImages != null && processedImages.length > 0) ? (\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>File name</th>\r\n                  <th>Orientation</th>\r\n                  <th>Resized</th>\r\n                  <th>Original Width</th>\r\n                  <th>Original Height</th>\r\n                  <th>New Weight</th>\r\n                  <th>New Height</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {processedImages.map((result) => (\r\n                  <tr key={Math.random()}>\r\n                    <td>{result.name}</td>\r\n                    <td>{result.orientation}</td>\r\n                    <td>{result.resized ? \"true\" : \"false\"}</td>\r\n                    <td>{result.originalWidth}</td>\r\n                    <td>{result.originalHeight}</td>\r\n                    <td>{result.width}</td>\r\n                    <td>{result.height}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\"\")}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileInput;\r\n","// import 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from \"./logo.svg\";\nimport \"./App.scss\";\nimport FileInput from \"./components/FileInput\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FileInput />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}